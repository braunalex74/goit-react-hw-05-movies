{"version":3,"file":"static/js/170.87a900bd.chunk.js","mappings":"8QAAaA,EAAiB,mCAAG,+GAENC,MAAM,4FAFA,cAEvBC,EAFuB,gBAKVA,EAASC,OALC,cAKvBC,EALuB,yBAMtBA,EAAKC,SANiB,wCAQvB,IAAIC,MAAM,mCARa,0DAAH,qDAYjBC,EAAe,mCAAG,WAAMC,GAAN,kGAEJP,MAAM,sCAAD,OACYO,EADZ,8CAFD,cAErBN,EAFqB,gBAKRA,EAASC,OALD,cAKrBC,EALqB,yBAMpBA,GANoB,wCAQrB,IAAIE,MAAM,iCARW,0DAAH,sDAwBfG,EAAe,mCAAG,WAAMD,GAAN,kGAEJP,MAAM,sCAAD,OACYO,EADZ,sDAFD,cAErBN,EAFqB,gBAKRA,EAASC,OALD,cAKrBC,EALqB,yBAMpBA,EAAKM,MANe,wCAQrB,IAAIJ,MAAM,iCARW,0DAAH,sDAYfK,EAAe,mCAAG,WAAMH,GAAN,kGAEJP,MAAM,sCAAD,OACYO,EADZ,sDAFD,cAErBN,EAFqB,gBAKRA,EAASC,OALD,cAKrBC,EALqB,yBAMpBA,EAAKC,SANe,wCAQrB,IAAIC,MAAM,iCARW,0DAAH,qD,0KC9CfM,EAAwBC,EAAAA,EAAAA,IAAH,oHAOrBC,EAAqBD,EAAAA,EAAAA,IAAH,8FAMlBE,EAASF,EAAAA,EAAAA,IAAH,qGAQNG,EAAUH,EAAAA,EAAAA,IAAH,6CAIPI,EAAgBJ,EAAAA,EAAAA,IAAH,6CAIbK,EAAWL,EAAAA,EAAAA,GAAH,8HAQRM,EAAWN,EAAAA,EAAAA,GAAH,qIAQRO,EAAYP,EAAAA,EAAAA,IAAH,0DAKTQ,EAASR,EAAAA,EAAAA,OAAH,6C,SCmFnB,EApHqB,WACnB,IAAQL,GAAYc,EAAAA,EAAAA,MAAZd,QACFe,GAAWC,EAAAA,EAAAA,MACjB,GAA0BC,EAAAA,EAAAA,UAAS,MAAnC,eAAOC,EAAP,KAAcC,EAAd,KACA,GAA8BF,EAAAA,EAAAA,UAAS,IAAvC,eAAOG,EAAP,KAAgBC,EAAhB,KACA,GAA8BJ,EAAAA,EAAAA,UAAS,IAAvC,eAAOK,EAAP,KAAgBC,EAAhB,KACA,GAAgCN,EAAAA,EAAAA,WAAS,GAAzC,eAAOO,EAAP,KAAiBC,EAAjB,KACA,GAAsCR,EAAAA,EAAAA,WAAS,GAA/C,eAAOS,EAAP,KAAoBC,EAApB,MAEAC,EAAAA,EAAAA,YAAU,WACR,IAAMC,EAAc,mCAAG,8GAEK9B,EAAAA,EAAAA,IAAgBC,GAFrB,OAEb8B,EAFa,OAGnBX,EAASW,GAHU,gDAKnBC,QAAQC,MAAM,gCAAd,MALmB,yDAAH,qDASpBH,GACD,GAAE,CAAC7B,IAEJ,IAAMiC,EAAgB,mCAAG,uFAClBT,EADkB,2CAGOvB,EAAAA,EAAAA,IAAgBD,GAHvB,OAGbkC,EAHa,OAInBb,EAAWa,GAJQ,gDAMnBH,QAAQC,MAAM,gCAAd,MANmB,QAUvBP,GAAaD,GAVU,yDAAH,qDAahBW,EAAmB,mCAAG,uFACrBT,EADqB,2CAGIvB,EAAAA,EAAAA,IAAgBH,GAHpB,OAGhBoC,EAHgB,OAItBb,EAAWa,GAJW,gDAMtBL,QAAQC,MAAM,gCAAd,MANsB,QAU1BL,GAAgBD,GAVU,yDAAH,qDAiBzB,OAAKR,GAKH,UAACd,EAAD,YACE,mBAAQiC,QAVS,WACnBtB,GAAU,EACX,EAQG,sBACA,wBAAKG,EAAMoB,SACX,UAAChC,EAAD,YACE,SAACC,EAAD,WACE,gBACEgC,IAAG,yCAAoCrB,EAAMsB,aAC7CC,IAAKvB,EAAMoB,WAGf,UAAC9B,EAAD,YACE,0CAAkBU,EAAMwB,iBACxB,sCAAcxB,EAAMyB,mBAGxB,SAAC9B,EAAD,CAAQwB,QAASJ,EAAjB,SACGT,EAAW,YAAc,cAG3BA,IACC,0BACE,UAACf,EAAD,YACE,kCACA,SAACC,EAAD,UACGU,EAAQwB,KAAI,SAAAC,GAAU,OACrB,UAAClC,EAAD,YACE,SAACC,EAAD,CACE2B,IAAG,yCAAoCM,EAAWC,cAClDL,IAAKI,EAAWE,OAEjBF,EAAWE,OALCF,EAAWG,GADL,YAc/B,SAACnC,EAAD,CAAQwB,QAASF,EAAjB,SACGT,EAAc,eAAiB,iBAGjCA,IACC,4BACE,qCACA,wBACGJ,EAAQsB,KAAI,SAAAK,GAAM,OACjB,2BACE,oCAAYA,EAAOC,WACnB,uBAAID,EAAOE,YAFJF,EAAOD,GADC,aAlDpB,uCA6DV,C","sources":["api/api.js","components/MovieDetails/MovieDetails.styled.jsx","components/MovieDetails/MovieDetails.jsx"],"sourcesContent":["export const getTrendingMovies = async () => {\n  try {\n    const response = await fetch(\n      `https://api.themoviedb.org/3/trending/movie/day?api_key=104cb1f11a5d6d55ba8d6504d9bd060a`\n    );\n    const data = await response.json();\n    return data.results;\n  } catch (error) {\n    throw new Error('Failed to fetch trending movies');\n  }\n};\n\nexport const getMovieDetails = async movieId => {\n  try {\n    const response = await fetch(\n      `https://api.themoviedb.org/3/movie/${movieId}?api_key=104cb1f11a5d6d55ba8d6504d9bd060a`\n    );\n    const data = await response.json();\n    return data;\n  } catch (error) {\n    throw new Error('Failed to fetch movie details');\n  }\n};\n\nexport const getMovieCast = async movieId => {\n  try {\n    const response = await fetch(\n      `https://api.themoviedb.org/3/movie/${movieId}/credits?api_key=104cb1f11a5d6d55ba8d6504d9bd060a`\n    );\n    const data = await response.json();\n    return data.cast;\n  } catch (error) {\n    throw new Error('Failed to fetch movie cast');\n  }\n};\n\nexport const getMovieCredits = async movieId => {\n  try {\n    const response = await fetch(\n      `https://api.themoviedb.org/3/movie/${movieId}/credits?api_key=104cb1f11a5d6d55ba8d6504d9bd060a`\n    );\n    const data = await response.json();\n    return data.cast;\n  } catch (error) {\n    throw new Error('Failed to fetch movie credits');\n  }\n};\n\nexport const getMovieReviews = async movieId => {\n  try {\n    const response = await fetch(\n      `https://api.themoviedb.org/3/movie/${movieId}/reviews?api_key=104cb1f11a5d6d55ba8d6504d9bd060a`\n    );\n    const data = await response.json();\n    return data.results;\n  } catch (error) {\n    throw new Error('Failed to fetch movie reviews');\n  }\n};\n","import styled from '@emotion/styled';\n\nexport const MovieDetailsContainer = styled.div`\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  text-align: center;\n`;\n\nexport const MovieInfoContainer = styled.div`\n  display: flex;\n  align-items: flex-start;\n  margin-bottom: 20px;\n`;\n\nexport const Poster = styled.div`\n  img {\n    width: 300px;\n    height: auto;\n    margin-right: 20px;\n  }\n`;\n\nexport const Details = styled.div`\n  text-align: left;\n`;\n\nexport const CastContainer = styled.div`\n  margin-top: 20px;\n`;\n\nexport const CastList = styled.ul`\n  display: flex;\n  flex-wrap: wrap;\n  justify-content: center;\n  list-style: none;\n  padding: 0;\n`;\n\nexport const CastItem = styled.li`\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  margin: 10px;\n  text-align: center;\n`;\n\nexport const CastImage = styled.img`\n  width: 200px;\n  height: auto;\n`;\n\nexport const Button = styled.button`\n  margin-top: 20px;\n`;\n","import React, { useEffect, useState } from 'react';\nimport { useParams, useNavigate } from 'react-router-dom';\nimport {\n  getMovieDetails,\n  getMovieCredits,\n  getMovieReviews,\n} from '../../api/api';\nimport {\n  MovieDetailsContainer,\n  MovieInfoContainer,\n  Details,\n  Poster,\n  CastContainer,\n  CastList,\n  CastItem,\n  CastImage,\n  Button,\n} from './MovieDetails.styled';\n\nconst MovieDetails = () => {\n  const { movieId } = useParams();\n  const navigate = useNavigate();\n  const [movie, setMovie] = useState(null);\n  const [credits, setCredits] = useState([]);\n  const [reviews, setReviews] = useState([]);\n  const [showCast, setShowCast] = useState(false);\n  const [showReviews, setShowReviews] = useState(false);\n\n  useEffect(() => {\n    const fetchMovieData = async () => {\n      try {\n        const movieData = await getMovieDetails(movieId);\n        setMovie(movieData);\n      } catch (error) {\n        console.error('Error fetching movie details:', error);\n      }\n    };\n\n    fetchMovieData();\n  }, [movieId]);\n\n  const handleToggleCast = async () => {\n    if (!showCast) {\n      try {\n        const creditsData = await getMovieCredits(movieId);\n        setCredits(creditsData);\n      } catch (error) {\n        console.error('Error fetching movie credits:', error);\n      }\n    }\n\n    setShowCast(!showCast);\n  };\n\n  const handleToggleReviews = async () => {\n    if (!showReviews) {\n      try {\n        const reviewsData = await getMovieReviews(movieId);\n        setReviews(reviewsData);\n      } catch (error) {\n        console.error('Error fetching movie reviews:', error);\n      }\n    }\n\n    setShowReviews(!showReviews);\n  };\n\n  const handleGoBack = () => {\n    navigate(-1);\n  };\n\n  if (!movie) {\n    return <div>Loading...</div>;\n  }\n\n  return (\n    <MovieDetailsContainer>\n      <button onClick={handleGoBack}>Go Back</button>\n      <h2>{movie.title}</h2>\n      <MovieInfoContainer>\n        <Poster>\n          <img\n            src={`https://image.tmdb.org/t/p/w500${movie.poster_path}`}\n            alt={movie.title}\n          />\n        </Poster>\n        <Details>\n          <p>Release Date: {movie.release_date}</p>\n          <p>Overview: {movie.overview}</p>\n        </Details>\n      </MovieInfoContainer>\n      <Button onClick={handleToggleCast}>\n        {showCast ? 'Hide Cast' : 'Show Cast'}\n      </Button>\n\n      {showCast && (\n        <div>\n          <CastContainer>\n            <h3>Cast</h3>\n            <CastList>\n              {credits.map(castMember => (\n                <CastItem key={castMember.id}>\n                  <CastImage\n                    src={`https://image.tmdb.org/t/p/w200${castMember.profile_path}`}\n                    alt={castMember.name}\n                  />\n                  {castMember.name}\n                </CastItem>\n              ))}\n            </CastList>\n          </CastContainer>\n        </div>\n      )}\n\n      <Button onClick={handleToggleReviews}>\n        {showReviews ? 'Hide Reviews' : 'Show Reviews'}\n      </Button>\n\n      {showReviews && (\n        <div>\n          <h3>Reviews</h3>\n          <ul>\n            {reviews.map(review => (\n              <li key={review.id}>\n                <p>Author: {review.author}</p>\n                <p>{review.content}</p>\n              </li>\n            ))}\n          </ul>\n        </div>\n      )}\n    </MovieDetailsContainer>\n  );\n};\n\nexport default MovieDetails;\n"],"names":["getTrendingMovies","fetch","response","json","data","results","Error","getMovieDetails","movieId","getMovieCredits","cast","getMovieReviews","MovieDetailsContainer","styled","MovieInfoContainer","Poster","Details","CastContainer","CastList","CastItem","CastImage","Button","useParams","navigate","useNavigate","useState","movie","setMovie","credits","setCredits","reviews","setReviews","showCast","setShowCast","showReviews","setShowReviews","useEffect","fetchMovieData","movieData","console","error","handleToggleCast","creditsData","handleToggleReviews","reviewsData","onClick","title","src","poster_path","alt","release_date","overview","map","castMember","profile_path","name","id","review","author","content"],"sourceRoot":""}