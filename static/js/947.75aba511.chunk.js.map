{"version":3,"file":"static/js/947.75aba511.chunk.js","mappings":"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","sources":["api/api.js","components/Cast/Cast.jsx","components/MovieDetails/MovieDetails.jsx","../node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js"],"sourcesContent":["export const getTrendingMovies = async () => {\n  try {\n    const response = await fetch(\n      `https://api.themoviedb.org/3/trending/movie/day?api_key=104cb1f11a5d6d55ba8d6504d9bd060a`\n    );\n    const data = await response.json();\n    return data.results;\n  } catch (error) {\n    throw new Error('Failed to fetch trending movies');\n  }\n};\n\nexport const getMovieDetails = async movieId => {\n  try {\n    const response = await fetch(\n      `https://api.themoviedb.org/3/movie/${movieId}?api_key=104cb1f11a5d6d55ba8d6504d9bd060a`\n    );\n    const data = await response.json();\n    return data;\n  } catch (error) {\n    throw new Error('Failed to fetch movie details');\n  }\n};\n\nexport const getMovieCast = async movieId => {\n  try {\n    const response = await fetch(\n      `https://api.themoviedb.org/3/movie/${movieId}/credits?api_key=104cb1f11a5d6d55ba8d6504d9bd060a`\n    );\n    const data = await response.json();\n    return data.cast;\n  } catch (error) {\n    throw new Error('Failed to fetch movie cast');\n  }\n};\n\nexport const getMovieCredits = async movieId => {\n  try {\n    const response = await fetch(\n      `https://api.themoviedb.org/3/movie/${movieId}/credits?api_key=104cb1f11a5d6d55ba8d6504d9bd060a`\n    );\n    const data = await response.json();\n    return data.cast;\n  } catch (error) {\n    throw new Error('Failed to fetch movie credits');\n  }\n};\n\nexport const getMovieReviews = async movieId => {\n  try {\n    const response = await fetch(\n      `https://api.themoviedb.org/3/movie/${movieId}/reviews?api_key=104cb1f11a5d6d55ba8d6504d9bd060a`\n    );\n    const data = await response.json();\n    return data.results;\n  } catch (error) {\n    throw new Error('Failed to fetch movie reviews');\n  }\n};\n","import React, { useEffect, useState } from 'react';\nimport { useParams } from 'react-router-dom';\nimport { getMovieCredits } from '../../api/api';\n\nconst Cast = () => {\n  const { movieId } = useParams();\n  const [credits, setCredits] = useState([]);\n\n  useEffect(() => {\n    const fetchMovieCredits = async () => {\n      try {\n        const creditsData = await getMovieCredits(movieId);\n        setCredits(creditsData);\n      } catch (error) {\n        console.error('Error fetching movie credits:', error);\n      }\n    };\n\n    fetchMovieCredits();\n  }, [movieId]);\n\n  return (\n    <div>\n      <h2>Cast</h2>\n      <ul>\n        {credits.map(castMember => (\n          <li key={castMember.id}>\n            <img\n              src={`https://image.tmdb.org/t/p/w200${castMember.profile_path}`}\n              alt={castMember.name}\n            />\n            {castMember.name}\n          </li>\n        ))}\n      </ul>\n    </div>\n  );\n};\n\nexport default Cast;\n","import React, { useEffect, useState } from 'react';\nimport { useParams, useNavigate } from 'react-router-dom';\nimport {\n  getMovieDetails,\n  getMovieCredits,\n  getMovieReviews,\n} from '../../api/api';\nimport Cast from '../Cast/Cast';\n\nconst MovieDetails = () => {\n  const { movieId } = useParams();\n  const navigate = useNavigate();\n  const [movie, setMovie] = useState(null);\n  const [credits, setCredits] = useState([]);\n  const [reviews, setReviews] = useState([]);\n  const [showCast, setShowCast] = useState(false);\n  const [showReviews, setShowReviews] = useState(false);\n\n  useEffect(() => {\n    const fetchMovieData = async () => {\n      try {\n        const movieData = await getMovieDetails(movieId);\n        setMovie(movieData);\n      } catch (error) {\n        console.error('Error fetching movie details:', error);\n      }\n    };\n\n    fetchMovieData();\n  }, [movieId]);\n\n  const handleToggleCast = async () => {\n    if (!showCast) {\n      try {\n        const creditsData = await getMovieCredits(movieId);\n        setCredits(creditsData);\n      } catch (error) {\n        console.error('Error fetching movie credits:', error);\n      }\n    }\n\n    setShowCast(!showCast);\n  };\n\n  const handleToggleReviews = async () => {\n    if (!showReviews) {\n      try {\n        const reviewsData = await getMovieReviews(movieId);\n        setReviews(reviewsData);\n      } catch (error) {\n        console.error('Error fetching movie reviews:', error);\n      }\n    }\n\n    setShowReviews(!showReviews);\n  };\n\n  const handleGoBack = () => {\n    navigate(-1);\n  };\n\n  if (!movie) {\n    return <div>Loading...</div>;\n  }\n\n  return (\n    <div>\n      <button onClick={handleGoBack}>Go Back</button>\n      <h2>{movie.title}</h2>\n      <img\n        src={`https://image.tmdb.org/t/p/w500${movie.poster_path}`}\n        alt={movie.title}\n      />\n      <p>Release Date: {movie.release_date}</p>\n      <p>Overview: {movie.overview}</p>\n      <button onClick={handleToggleCast}>\n        {showCast ? 'Hide Cast' : 'Show Cast'}\n      </button>\n\n      {showCast && (\n        <div>\n          <Cast credits={credits} />{' '}\n          {/* Додано компонент Cast та передано пропс credits */}\n        </div>\n      )}\n\n      <button onClick={handleToggleReviews}>\n        {showReviews ? 'Hide Reviews' : 'Show Reviews'}\n      </button>\n\n      {showReviews && (\n        <div>\n          <h3>Reviews</h3>\n          <ul>\n            {reviews.map(review => (\n              <li key={review.id}>\n                <p>Author: {review.author}</p>\n                <p>{review.content}</p>\n              </li>\n            ))}\n          </ul>\n        </div>\n      )}\n    </div>\n  );\n};\n\nexport default MovieDetails;\n","function asyncGeneratorStep(gen, resolve, reject, _next, _throw, key, arg) {\n  try {\n    var info = gen[key](arg);\n    var value = info.value;\n  } catch (error) {\n    reject(error);\n    return;\n  }\n  if (info.done) {\n    resolve(value);\n  } else {\n    Promise.resolve(value).then(_next, _throw);\n  }\n}\nexport default function _asyncToGenerator(fn) {\n  return function () {\n    var self = this,\n      args = arguments;\n    return new Promise(function (resolve, reject) {\n      var gen = fn.apply(self, args);\n      function _next(value) {\n        asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"next\", value);\n      }\n      function _throw(err) {\n        asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"throw\", err);\n      }\n      _next(undefined);\n    });\n  };\n}"],"names":["getTrendingMovies","fetch","response","json","data","results","Error","getMovieDetails","movieId","getMovieCredits","cast","getMovieReviews","useParams","useState","credits","setCredits","useEffect","fetchMovieCredits","creditsData","console","error","map","castMember","src","profile_path","alt","name","id","navigate","useNavigate","movie","setMovie","reviews","setReviews","showCast","setShowCast","showReviews","setShowReviews","fetchMovieData","movieData","handleToggleCast","handleToggleReviews","reviewsData","onClick","title","poster_path","release_date","overview","review","author","content","asyncGeneratorStep","gen","resolve","reject","_next","_throw","key","arg","info","value","done","Promise","then","_asyncToGenerator","fn","self","this","args","arguments","apply","err","undefined"],"sourceRoot":""}