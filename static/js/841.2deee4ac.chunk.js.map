{"version":3,"file":"static/js/841.2deee4ac.chunk.js","mappings":"mPA2FA,UArEsB,WAAO,IAAD,MAClBA,GAAYC,EAAAA,EAAAA,MAAZD,QACR,GAA0BE,EAAAA,EAAAA,UAAS,IAAnC,eAAOC,EAAP,KAAcC,EAAd,KACMC,GAAWC,EAAAA,EAAAA,MAEXC,EAAY,oBAAGF,EAASG,aAAZ,aAAG,EAAgBC,YAAnB,QAA2B,UAa7C,OAZAC,EAAAA,EAAAA,YAAU,WACR,IAAMC,EAAc,mCAAG,8GAEKC,EAAAA,EAAAA,IAAaZ,GAFlB,OAEba,EAFa,OAGnBT,EAASS,GAHU,gDAKnBC,QAAQC,IAAR,MALmB,yDAAH,qDAQpBJ,GACD,GAAE,CAACX,KAGF,iCACE,SAAC,EAAAgB,WAAD,WACE,UAAC,KAAD,CAAMC,GAAIV,EAAV,qBACS,sCAGX,UAAC,EAAAW,YAAD,YACE,SAAC,EAAAC,QAAD,CACEC,IAAG,UACDjB,EAAMkB,YACFC,EAAAA,EAAkBnB,EAAMkB,YACxBE,EAAAA,EAAc,SAAWpB,EAAMqB,gBAErCC,IAAI,SAEN,4BACE,SAAC,EAAAC,UAAD,UAAYvB,EAAMqB,kBAClB,UAAC,EAAAG,aAAD,sBAAuBC,KAAKC,MAAM1B,EAAM2B,kBACxC,SAAC,EAAAH,aAAD,wBACA,SAAC,EAAAI,UAAD,UAAY5B,EAAM6B,YAClB,SAAC,EAAAL,aAAD,sBACA,SAAC,EAAAM,gBAAD,oBACG9B,EAAM+B,cADT,aACG,EAAcC,KAAI,SAAAC,GAAK,OACtB,wBAAoBA,EAAMC,MAAjBD,EAAME,GADO,aAM9B,4BACE,oDACA,UAAC,EAAAC,WAAD,YACE,SAAC,EAAAC,SAAD,WACE,UAAC,KAAD,CAASvB,GAAG,OAAOT,MAAOH,EAASG,MAAnC,kBACM,sCAGR,SAAC,EAAAgC,SAAD,WACE,UAAC,KAAD,CAASvB,GAAG,UAAUT,MAAOH,EAASG,MAAtC,qBACS,yCAIb,SAAC,EAAAiC,SAAD,CAAUC,UAAU,gDAApB,UACE,SAAC,KAAD,WAKT,C,6NCvFDC,EAAAA,EAAAA,SAAAA,QAAyB,gCACzB,IAAMC,EAAU,mCAEHC,EAAiB,mCAAG,sGACRF,EAAAA,EAAAA,IAAA,sCAAyCC,IADjC,uBACvBE,EADuB,EACvBA,KADuB,kBAGxBA,EAAKC,SAHmB,2CAAH,qDAMjBC,EAAe,mCAAG,WAAMC,GAAN,yFACNN,EAAAA,EAAAA,IAAA,+BACGC,EADH,kBACoBK,EADpB,+CADM,uBACrBH,EADqB,EACrBA,KADqB,kBAKtBA,EAAKC,SALiB,2CAAH,sDAQfnC,EAAY,mCAAG,WAAMZ,GAAN,yFACH2C,EAAAA,EAAAA,IAAA,gBACZ3C,EADY,oBACO4C,EADP,oBADG,uBAClBE,EADkB,EAClBA,KADkB,kBAKnBA,GALmB,2CAAH,sDAQZI,EAAY,mCAAG,WAAMlD,GAAN,yFACH2C,EAAAA,EAAAA,IAAA,gBACZ3C,EADY,4BACe4C,EADf,oBADG,uBAClBE,EADkB,EAClBA,KADkB,kBAKnBA,EAAKK,MALc,2CAAH,sDAOZC,EAAe,mCAAG,WAAMpD,GAAN,yFACN2C,EAAAA,EAAAA,IAAA,gBACZ3C,EADY,4BACe4C,EADf,oBADM,uBACrBE,EADqB,EACrBA,KADqB,kBAKtBA,EAAKC,SALiB,2CAAH,qD,0FClCrB,IAAMzB,EAAkB,mCAClBC,EAAc,qC","sources":["pages/MoviesDetails/MoviesDetails.jsx","services/getMovies.js","utils/constants.js"],"sourcesContent":["import { Suspense, useEffect, useState } from 'react';\nimport {\n  Link,\n  NavLink,\n  Outlet,\n  useLocation,\n  useParams,\n} from 'react-router-dom';\nimport { getMovieById } from 'services/getMovies';\nimport { BASE_POSTER_URL, PLACEHOLDER } from 'utils/constants';\nimport {\n  FilmWrapper,\n  StyledList,\n  ListItem,\n  FilmImg,\n  FilmTitle,\n  FilmDescr,\n  GoBackLink,\n  FilmSubTitle,\n  StyledListDescr,\n} from './MoviesDetails.module';\n\nconst MoviesDetails = () => {\n  const { movieId } = useParams();\n  const [movie, setMovie] = useState('');\n  const location = useLocation();\n\n  const backLinkHref = location.state?.from ?? '/movies';\n  useEffect(() => {\n    const fetchMovieById = async () => {\n      try {\n        const movieById = await getMovieById(movieId);\n        setMovie(movieById);\n      } catch (e) {\n        console.log(e);\n      }\n    };\n    fetchMovieById();\n  }, [movieId]);\n\n  return (\n    <>\n      <GoBackLink>\n        <Link to={backLinkHref}>\n          Go back<span>.</span>\n        </Link>\n      </GoBackLink>\n      <FilmWrapper>\n        <FilmImg\n          src={`${\n            movie.poster_path\n              ? BASE_POSTER_URL + movie.poster_path\n              : PLACEHOLDER + '?text=' + movie.original_title\n          }`}\n          alt=\"get\"\n        />\n        <div>\n          <FilmTitle>{movie.original_title}</FilmTitle>\n          <FilmSubTitle>Rating: {Math.round(movie.vote_average)}</FilmSubTitle>\n          <FilmSubTitle>Overview</FilmSubTitle>\n          <FilmDescr>{movie.overview}</FilmDescr>\n          <FilmSubTitle>Genres</FilmSubTitle>\n          <StyledListDescr>\n            {movie.genres?.map(genre => (\n              <li key={genre.id}>{genre.name}</li>\n            ))}\n          </StyledListDescr>\n        </div>\n      </FilmWrapper>\n      <div>\n        <h2>Additional information</h2>\n        <StyledList>\n          <ListItem>\n            <NavLink to=\"cast\" state={location.state}>\n              Cast<span>.</span>\n            </NavLink>\n          </ListItem>\n          <ListItem>\n            <NavLink to=\"reviews\" state={location.state}>\n              Reviews<span>.</span>\n            </NavLink>\n          </ListItem>\n        </StyledList>\n        <Suspense fallback={<div>Loading subpage...</div>}>\n          <Outlet />\n        </Suspense>\n      </div>\n    </>\n  );\n};\n\nexport default MoviesDetails;\n","import axios from 'axios';\n\naxios.defaults.baseURL = 'https://api.themoviedb.org/3/';\nconst API_KEY = '104cb1f11a5d6d55ba8d6504d9bd060a';\n\nexport const getTrendingMovies = async () => {\n  const { data } = await axios.get(`trending/movie/week?api_key=${API_KEY}`);\n\n  return data.results;\n};\n\nexport const getMovieByQuery = async query => {\n  const { data } = await axios.get(\n    `search/movie?api_key=${API_KEY}&query=${query}&language=en-US&page=1&include_adult=false`\n  );\n\n  return data.results;\n};\n\nexport const getMovieById = async movieId => {\n  const { data } = await axios.get(\n    `movie/${movieId}?api_key=${API_KEY}&language=en-US`\n  );\n\n  return data;\n};\n\nexport const getCastMovie = async movieId => {\n  const { data } = await axios.get(\n    `movie/${movieId}/credits?api_key=${API_KEY}&language=en-US`\n  );\n\n  return data.cast;\n};\nexport const getReviewsMovie = async movieId => {\n  const { data } = await axios.get(\n    `movie/${movieId}/reviews?api_key=${API_KEY}&language=en-US`\n  );\n\n  return data.results;\n};\n","export const BASE_POSTER_URL = 'https://image.tmdb.org/t/p/w500/';\nexport const PLACEHOLDER = 'https://via.placeholder.com/182x273';\n"],"names":["movieId","useParams","useState","movie","setMovie","location","useLocation","backLinkHref","state","from","useEffect","fetchMovieById","getMovieById","movieById","console","log","GoBackLink","to","FilmWrapper","FilmImg","src","poster_path","BASE_POSTER_URL","PLACEHOLDER","original_title","alt","FilmTitle","FilmSubTitle","Math","round","vote_average","FilmDescr","overview","StyledListDescr","genres","map","genre","name","id","StyledList","ListItem","Suspense","fallback","axios","API_KEY","getTrendingMovies","data","results","getMovieByQuery","query","getCastMovie","cast","getReviewsMovie"],"sourceRoot":""}