{"version":3,"file":"static/js/947.abd09288.chunk.js","mappings":"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","sources":["api/api.js","components/Cast/Cast.jsx","components/MovieDetails/MovieDetails.jsx","components/Reviews/Reviews.jsx","../node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js"],"sourcesContent":["export const getTrendingMovies = async () => {\n  try {\n    const response = await fetch(\n      `https://api.themoviedb.org/3/trending/movie/day?api_key=104cb1f11a5d6d55ba8d6504d9bd060a`\n    );\n    const data = await response.json();\n    return data.results;\n  } catch (error) {\n    throw new Error('Failed to fetch trending movies');\n  }\n};\n\nexport const getMovieDetails = async movieId => {\n  try {\n    const response = await fetch(\n      `https://api.themoviedb.org/3/movie/${movieId}?api_key=104cb1f11a5d6d55ba8d6504d9bd060a`\n    );\n    const data = await response.json();\n    return data;\n  } catch (error) {\n    throw new Error('Failed to fetch movie details');\n  }\n};\n\nexport const getMovieCast = async movieId => {\n  try {\n    const response = await fetch(\n      `https://api.themoviedb.org/3/movie/${movieId}/credits?api_key=104cb1f11a5d6d55ba8d6504d9bd060a`\n    );\n    const data = await response.json();\n    return data.cast;\n  } catch (error) {\n    throw new Error('Failed to fetch movie cast');\n  }\n};\n\nexport const getMovieCredits = async movieId => {\n  try {\n    const response = await fetch(\n      `https://api.themoviedb.org/3/movie/${movieId}/credits?api_key=104cb1f11a5d6d55ba8d6504d9bd060a`\n    );\n    const data = await response.json();\n    return data.cast;\n  } catch (error) {\n    throw new Error('Failed to fetch movie credits');\n  }\n};\n\nexport const getMovieReviews = async movieId => {\n  try {\n    const response = await fetch(\n      `https://api.themoviedb.org/3/movie/${movieId}/reviews?api_key=104cb1f11a5d6d55ba8d6504d9bd060a`\n    );\n    const data = await response.json();\n    return data.results;\n  } catch (error) {\n    throw new Error('Failed to fetch movie reviews');\n  }\n};\n","import React, { useEffect, useState } from 'react';\nimport { useParams } from 'react-router-dom';\nimport { getMovieCredits } from '../../api/api';\n\nconst Cast = () => {\n  const { movieId } = useParams();\n  const [credits, setCredits] = useState([]);\n\n  useEffect(() => {\n    const fetchMovieCredits = async () => {\n      try {\n        const creditsData = await getMovieCredits(movieId);\n        setCredits(creditsData);\n      } catch (error) {\n        console.error('Error fetching movie credits:', error);\n      }\n    };\n\n    fetchMovieCredits();\n  }, [movieId]);\n\n  return (\n    <div>\n      <h2>Cast</h2>\n      <ul>\n        {credits.map(castMember => (\n          <li key={castMember.id}>{castMember.name}</li>\n        ))}\n      </ul>\n    </div>\n  );\n};\n\nexport default Cast;\n","import React, { useEffect, useState } from 'react';\nimport { useParams, Link, Routes, Route } from 'react-router-dom';\nimport {\n  getMovieDetails,\n  getMovieCredits,\n  getMovieReviews,\n} from '../../api/api';\nimport Cast from '../Cast/Cast';\nimport Reviews from '../Reviews/Reviews';\n\nconst MovieDetails = () => {\n  const { movieId } = useParams();\n  const [movie, setMovie] = useState(null);\n  const [credits, setCredits] = useState([]);\n  const [reviews, setReviews] = useState([]);\n\n  useEffect(() => {\n    const fetchMovieData = async () => {\n      try {\n        const movieDetails = await getMovieDetails(movieId);\n        const movieCredits = await getMovieCredits(movieId);\n        const movieReviews = await getMovieReviews(movieId);\n        setMovie(movieDetails);\n        setCredits(movieCredits);\n        setReviews(movieReviews);\n      } catch (error) {\n        console.log('Error:', error.message);\n      }\n    };\n\n    fetchMovieData();\n  }, [movieId]);\n\n  if (!movie) {\n    return <div>Loading...</div>;\n  }\n\n  return (\n    <div>\n      <h2>{movie.title}</h2>\n      <img\n        src={`https://image.tmdb.org/t/p/w500${movie.poster_path}`}\n        alt={movie.title}\n      />\n\n      <p>Release Date: {movie.release_date}</p>\n      <p>Overview: {movie.overview}</p>\n\n      <nav>\n        <ul>\n          <li>\n            <Link to={`/movies/${movieId}/cast`}>Cast</Link>\n          </li>\n          <li>\n            <Link to={`/movies/${movieId}/reviews`}>Reviews</Link>\n          </li>\n        </ul>\n      </nav>\n\n      <Routes>\n        <Route\n          path=\"/movies/:movieId/cast\"\n          element={<Cast credits={credits} />}\n        />\n        <Route\n          path=\"/movies/:movieId/reviews\"\n          element={<Reviews reviews={reviews} />}\n        />\n      </Routes>\n    </div>\n  );\n};\n\nexport default MovieDetails;\n","import React, { useEffect, useState } from 'react';\nimport { useParams } from 'react-router-dom';\nimport { getMovieReviews } from '../../api/api';\n\nconst Reviews = () => {\n  const { movieId } = useParams();\n  const [reviews, setReviews] = useState([]);\n\n  useEffect(() => {\n    const fetchMovieReviews = async () => {\n      try {\n        const reviewsData = await getMovieReviews(movieId);\n        setReviews(reviewsData);\n      } catch (error) {\n        console.error('Error fetching movie reviews:', error);\n      }\n    };\n\n    fetchMovieReviews();\n  }, [movieId]);\n\n  return (\n    <div>\n      <h2>Reviews</h2>\n      <ul>\n        {reviews.map(review => (\n          <li key={review.id}>\n            <p>Author: {review.author}</p>\n            <p>{review.content}</p>\n          </li>\n        ))}\n      </ul>\n    </div>\n  );\n};\n\nexport default Reviews;\n","function asyncGeneratorStep(gen, resolve, reject, _next, _throw, key, arg) {\n  try {\n    var info = gen[key](arg);\n    var value = info.value;\n  } catch (error) {\n    reject(error);\n    return;\n  }\n  if (info.done) {\n    resolve(value);\n  } else {\n    Promise.resolve(value).then(_next, _throw);\n  }\n}\nexport default function _asyncToGenerator(fn) {\n  return function () {\n    var self = this,\n      args = arguments;\n    return new Promise(function (resolve, reject) {\n      var gen = fn.apply(self, args);\n      function _next(value) {\n        asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"next\", value);\n      }\n      function _throw(err) {\n        asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"throw\", err);\n      }\n      _next(undefined);\n    });\n  };\n}"],"names":["getTrendingMovies","fetch","response","json","data","results","Error","getMovieDetails","movieId","getMovieCredits","cast","getMovieReviews","useParams","useState","credits","setCredits","useEffect","fetchMovieCredits","creditsData","console","error","map","castMember","name","id","movie","setMovie","reviews","setReviews","fetchMovieData","movieDetails","movieCredits","movieReviews","log","message","title","src","poster_path","alt","release_date","overview","to","path","element","fetchMovieReviews","reviewsData","review","author","content","asyncGeneratorStep","gen","resolve","reject","_next","_throw","key","arg","info","value","done","Promise","then","_asyncToGenerator","fn","self","this","args","arguments","apply","err","undefined"],"sourceRoot":""}