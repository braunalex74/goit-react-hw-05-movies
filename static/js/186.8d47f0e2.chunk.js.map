{"version":3,"file":"static/js/186.8d47f0e2.chunk.js","mappings":"kOAqCA,UAhCgB,WACd,IAAQA,GAAYC,EAAAA,EAAAA,MAAZD,QACR,GAA8BE,EAAAA,EAAAA,UAAS,IAAvC,eAAOC,EAAP,KAAgBC,EAAhB,KAcA,OAZAC,EAAAA,EAAAA,YAAU,WACR,IAAMC,EAAY,mCAAG,8GAEKC,EAAAA,EAAAA,IAAgBP,GAFrB,OAEXQ,EAFW,OAGjBJ,EAAWI,GAHM,gDAKjBC,QAAQC,IAAR,MALiB,yDAAH,qDAQlBJ,GACD,GAAE,CAACN,IAEsB,IAAnBG,EAAQQ,QACb,yCAEA,SAAC,EAAAC,WAAD,UACGT,EAAQU,KAAI,gBAAGC,EAAH,EAAGA,GAAIC,EAAP,EAAOA,OAAQC,EAAf,EAAeA,QAAf,OACX,UAAC,EAAAC,SAAD,YACE,0BACE,sCADF,IACwBF,MAExB,SAAC,EAAAG,aAAD,UAAeF,MAJFF,EADJ,KAUlB,C,6NCjCDK,EAAAA,EAAAA,SAAAA,QAAyB,gCACzB,IAAMC,EAAU,mCAEHC,EAAiB,mCAAG,sGACRF,EAAAA,EAAAA,IAAA,sCAAyCC,IADjC,uBACvBE,EADuB,EACvBA,KADuB,kBAGxBA,EAAKC,SAHmB,2CAAH,qDAMjBC,EAAe,mCAAG,WAAMC,GAAN,yFACNN,EAAAA,EAAAA,IAAA,+BACGC,EADH,kBACoBK,EADpB,+CADM,uBACrBH,EADqB,EACrBA,KADqB,kBAKtBA,EAAKC,SALiB,2CAAH,sDAQfG,EAAY,mCAAG,WAAM1B,GAAN,yFACHmB,EAAAA,EAAAA,IAAA,gBACZnB,EADY,oBACOoB,EADP,oBADG,uBAClBE,EADkB,EAClBA,KADkB,kBAKnBA,GALmB,2CAAH,sDAQZK,EAAY,mCAAG,WAAM3B,GAAN,yFACHmB,EAAAA,EAAAA,IAAA,gBACZnB,EADY,4BACeoB,EADf,oBADG,uBAClBE,EADkB,EAClBA,KADkB,kBAKnBA,EAAKM,MALc,2CAAH,sDAOZrB,EAAe,mCAAG,WAAMP,GAAN,yFACNmB,EAAAA,EAAAA,IAAA,gBACZnB,EADY,4BACeoB,EADf,oBADM,uBACrBE,EADqB,EACrBA,KADqB,kBAKtBA,EAAKC,SALiB,2CAAH,qD","sources":["components/Reviews/Reviews.jsx","services/getMovies.js"],"sourcesContent":["import { useEffect, useState } from 'react';\nimport { useParams } from 'react-router-dom';\nimport { getReviewsMovie } from 'services/getMovies';\nimport { ListItem, StyledList, ReviewsDescr } from './Reviews.styled';\n\nconst Reviews = () => {\n  const { movieId } = useParams();\n  const [reviews, setReviews] = useState([]);\n\n  useEffect(() => {\n    const fetchReviews = async () => {\n      try {\n        const Reviews = await getReviewsMovie(movieId);\n        setReviews(Reviews);\n      } catch (e) {\n        console.log(e);\n      }\n    };\n    fetchReviews();\n  }, [movieId]);\n\n  return reviews.length === 0 ? (\n    <h3>No Reviews.</h3>\n  ) : (\n    <StyledList>\n      {reviews.map(({ id, author, content }) => (\n        <ListItem key={id}>\n          <p>\n            <span>Author:</span> {author}\n          </p>\n          <ReviewsDescr>{content}</ReviewsDescr>\n        </ListItem>\n      ))}\n    </StyledList>\n  );\n};\n\nexport default Reviews;\n","import axios from 'axios';\n\naxios.defaults.baseURL = 'https://api.themoviedb.org/3/';\nconst API_KEY = '104cb1f11a5d6d55ba8d6504d9bd060a';\n\nexport const getTrendingMovies = async () => {\n  const { data } = await axios.get(`trending/movie/week?api_key=${API_KEY}`);\n\n  return data.results;\n};\n\nexport const getMovieByQuery = async query => {\n  const { data } = await axios.get(\n    `search/movie?api_key=${API_KEY}&query=${query}&language=en-US&page=1&include_adult=false`\n  );\n\n  return data.results;\n};\n\nexport const getMovieById = async movieId => {\n  const { data } = await axios.get(\n    `movie/${movieId}?api_key=${API_KEY}&language=en-US`\n  );\n\n  return data;\n};\n\nexport const getCastMovie = async movieId => {\n  const { data } = await axios.get(\n    `movie/${movieId}/credits?api_key=${API_KEY}&language=en-US`\n  );\n\n  return data.cast;\n};\nexport const getReviewsMovie = async movieId => {\n  const { data } = await axios.get(\n    `movie/${movieId}/reviews?api_key=${API_KEY}&language=en-US`\n  );\n\n  return data.results;\n};\n"],"names":["movieId","useParams","useState","reviews","setReviews","useEffect","fetchReviews","getReviewsMovie","Reviews","console","log","length","StyledList","map","id","author","content","ListItem","ReviewsDescr","axios","API_KEY","getTrendingMovies","data","results","getMovieByQuery","query","getMovieById","getCastMovie","cast"],"sourceRoot":""}